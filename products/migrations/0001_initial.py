# Generated by Django 3.2 on 2023-08-09 17:49

from django.db import migrations, models
import django.db.models.deletion
import products.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='Nom categorie')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=products.models.image_categories, validators=[products.models.taille_image], verbose_name='Image')),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
            ],
            options={
                'verbose_name': 'Categorie',
                'verbose_name_plural': 'Categories',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Commentaires',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField(blank=True, null=True, verbose_name='description evenement')),
                ('note', models.IntegerField(blank=True, null=True, verbose_name='Note produit')),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DescriptionPrecise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nom')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('valeur', models.CharField(blank=True, max_length=200, null=True, verbose_name='valeur')),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
            ],
            options={
                'verbose_name': 'Description precise',
                'verbose_name_plural': 'Descriptions precises',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='titre evenement')),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True, verbose_name='sous titre evenement')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('date_limite', models.DateField(blank=True, null=True, verbose_name='date fin evenement')),
                ('contenu', models.TextField(blank=True, null=True, verbose_name='description evenement')),
                ('images', models.ImageField(blank=True, null=True, upload_to=products.models.image_evenements, verbose_name='images')),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
            ],
            options={
                'verbose_name': 'Evenement',
                'verbose_name_plural': 'Evenements',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=products.models.product_image_path, validators=[products.models.taille_image], verbose_name='Image')),
            ],
        ),
        migrations.CreateModel(
            name='Variantes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nom sous-categorie')),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
            ],
            options={
                'verbose_name': 'Variante',
                'verbose_name_plural': 'Variantes',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nom sous-categorie')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Nom categorie')),
            ],
            options={
                'verbose_name': 'Sous Categorie',
                'verbose_name_plural': 'Sous Categories',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nom produit')),
                ('slug', models.SlugField(null=True, unique=True)),
                ('extras', models.CharField(blank=True, max_length=200, null=True, verbose_name='Extras')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Prix')),
                ('prix_promo', models.IntegerField(blank=True, null=True, verbose_name='Prix evenement')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description produit')),
                ('date_registry', models.DateTimeField(auto_now_add=True, verbose_name="Date d'enregistrement")),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('status', models.BooleanField(default=True, verbose_name='Etat')),
                ('description_precise', models.ManyToManyField(blank=True, to='products.DescriptionPrecise', verbose_name='description precise')),
                ('event', models.ManyToManyField(blank=True, to='products.Event', verbose_name='Evenement')),
                ('images', models.ManyToManyField(to='products.Image')),
                ('sub_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='products.subcategory', verbose_name='Nom sous categorie')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-id'],
            },
        ),
    ]
